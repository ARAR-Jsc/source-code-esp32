******* de chay firefox tren may ao 40GB *******************************
	cach 1. chay lenh: cd /
			sudo xdg-open etc/apt/sources.list (tat pup-up bat len dau tien) 
	cach 2.chay cac lenh: su ---> nhap mk
			 cd usr/lib/firefox-4.0/
			 sudo chmod +x firefox.sh
			 sudo ./firefox.sh

************************************************************************

********cach dat lai mk tai khoan linux*********

khi tk root co password ma minh ko biet:
khi khoi chay vmware (hien logo cua vmware) nhan giu shift den khi recovery menu xuat hien
 --> chon dong he dieu hanh mong muon
 --> nhan enter
 --> tro toi dong inux/inix di toi cuoi dong co chu handoff
 --> them vao sau handoff: init=/bin/bash --> enter --> reboot
 --> mount -n -o remount,rw / --> enter
 --> passwd [ten tai khoan] vidu o day la ltk/root
 --> reboot
*************************************************
khi tai khoan root khong co password:
khi khoi chay vmware (hien logo cua vmware) nhan giu shift den khi recovery menu xuat hien
 --> chon dong co chu recovery mode --> enter
 --> tro toi root --> enter
 --> mount -n -o remount,rw / --> enter
 --> passwd [ten tai khoan] vidu o day la ltk/root
 --> reboot
 
 khi vao lai giao dien GUI, co the khoa tai khoan root : sudo passwd --lock root /sudo -d root
 de mo lai sudo passwd root --> dat lai mk

**update:
- access root if verify account by su command fail: su -s (no need root password) exit root: exit command


*************************************************

****cach dat linux la os mac dinh khi khi dong ko dung grub-customizer ******
1. xem file /boot/grub/grub.cfg ----> tim menuentry cua linux la bao nhieu
2. xem file /etc/default/grub   ----> doi "GRUB_DEFAULT = " thanh so mong muon
3. sudo update-grub

*****************************************************************************

***********truy cap o dia qua terminal**********************************
1. liet ke tat ca o dia tren linux: sudo fdisk -l (can dung lenh sudo)
2. mount 1 o dia (dieu nay giup truy cap vao o dia /dev/sdax thong qua terminal): sudo mount /dev/sdax /media/folder_created_user
3. unmount 1 o dia khoi he thong (filesystem): sudo umount /dev/sdax

-note: for android device:  + run command usb-devices for device name (loop ...)
							+ it's at /run/user/1000/gvfs/

************************************************************************

************tu dong ke khung vien cho cell trong excel******************
1. boi den so luong o can tao khung vien tu dong
2. the Home --> mui ten ben canh Conditional Formatting --> New Rules --> chon "Use a formula to determine which cells to format"
--> nhap cong thuc =counta(cell dau tien trong nhung o duoc boi den (ko dung dia chi tuyet doi (vi du: $F$3))>0 --> enter --> done

************************************************************************


************tao danh sach so xuong phu thuoc vao danh sach khac trong excel******************
1. dung ham OFFSET, MATCH va COUNTIFS de thuc hien

** vi du: tao danh sach (data validation --list) cho huyen phu thuoc vao tinh.
	1- tao list cho tinh nhu thong thuong
	2- tao bang du lieu cho tinh va huyen (da sap sep, xoa nhung o lap lai)
	dung cong thuc tao list:
	=OFFSET(o dau tien cua bang du lieu can dung (o day la bang du lieu tinh va huyen vua tao), MATCH(gia tri tim kiem, vung tim
	kiem (o day la bang du lieu tinh va huyen vua tao),
	loai tim kiem (thuong la 0))-1, vi tri cot can lay du lieu de tao list so voi o dau tien (noi den trong cong thuc), COUNTIFS(vung tim
	kiem (o day la bang du lieu tinh va huyen vua tao), gia tri tim kiem))

xem them trong file excel cua exel_compress.zip

************************************************************************

************lay thoi gian va ngay trong  excel******************
1. lay ngay: =today()
2. lay gio: =now()


************************************************************************


*****************LED drivers IC*****************************************
Drivers IC: 
1. MAX7219 dang gap van de ve nguon (hoat dong voi nguon AC-DC, nguon AC cua xe chua hoat dong
2. TLC5971PWPR (banlinhkien.com)(LED RGB)
3. TM1629 (16-segments LED drivers)(banlinhkien.com)

************************************************************************

*********************** turn on wifi card ******************************
- dung iwconfig de xem thong tin ve loai hien co tren may
- dung sudo ifconfig [ten_card_wifi_vidu_wlo1(tu iwconfig command)] up de mo wifi (down de tat wifi)
- dung sudo ifconfig wlo1 essid [ten mang wifi] key s:password de ket noi wifi chuan ma hoa WEP (wlo1: ten card lay tu iwconfig command
s:password (nhap password duoi dang ma ASCII)

+++ for WPA/WPA2 encode (chua hoat dong duoc):
   - xem danh sach wifi device name: /sbin/iw dev
   - kiem tra wifi device da duoc bat hay chua: ip link show wlo1
   - dung sudo ip link set wlo1 up de bat wifi len neu wifi chua duoc bat
   - kiem tra trang thai ket noi: /sbin/iw wlo1 link
   - xem diem wifi do la gi: /sbin/iw wlo1 scan
   - ket noi toi diem wifi:
      + sudo -s de cho biet cac hoat dong sau do se duoc chay o root

[[connect wifi on orangepi via putty serial]]
    - nmcli radio wifi on --> nmcli d wifi connect SSID password pws   (SSID: abcbc edsd   --->    abcbc\ edsd)


************************************************************************

****************** dieu khien am luong qua terminal*********************
- mute/unmute (tac dong den ca giao dien do hoa): amixer -D pulse sset Master mute/unmute
- tang/giam am luong: amixer -D pulse sset Master [number]%+/- (+/- tuong ung tang/giam am luong)
- dat cho 1 gia tri: amixer -D pulse sset Master [number]%
************************************************************************

************ xem lich su sua file tu github *****************************
- git log path_to_file (chi xem commit nao ko xem duoc noi dung da sua)
 or git log --follow -p -- path_to_file > resultFile.log (xem duoc da sua nhung gi)

************************************************************************

************ xem tag/branch hien tai ***********************************
- tag: git describe --exact-match --tag
- branch: git branch
- git log --graph : see history push
************************************************************************

************ nhay toi dau hoac cuoi file *******************************
- nhay toi cuoi file : shift + g, nhay e dau file g

************************************************************************

************ grep/find command *****************************************
- grep (tim chuoi trong file): grep -Rn "chuoi can tim" [vi tri tim]
ex: grep -Rn "xin" ./ (tim tu xin o vi tri hien tai va thu muc con (-R)
(n) in so dong cua dong trung khop)
- find: find [vi tri tim] option "chuan can tim":
ex: find ./ -name "knowledgeLinux.txt" (tim theo ten, file knowledgeLinux.txt)

************************************************************************

********************* gan phim chuc nang trong vim *********************
+++ (de biet cac lenh khac: mo vim len, sau do :help map)
-gan F3 bang chen # vao ngay dau dong: mo file .vimrc len them dong :noremap <F3> <S-i>#<Esc>  (<F3> la phim
F3 duoc gan trong vim, <S-i> vim se hieu la shift + i, 3 vim se them "#" vao, <Esc> la phim ESC


- gan tab = 4 space: set tabstop=4 (no van duoc xem la \t (tab) nhung vim se thong dich no bang 4 (co the gay loi khi lam viec voi python),
softtabstop=4 (chinh tab = 4 column)

- expandtab --> convert tab to 4 space in vim (can move by arrow key) by when write Makefile,
it must be removed in vimrc due to cause "*** missing separator.  Stop" for make command

************************************************************************

********** luu y khi vua cai lai ubuntu ********************************
 - Sau khi cai dat lai linux, vi editor la version cu nen phai cai vim moi:
	+ sudo apt intstall vim

************************************************************************

*********** mo file video/.txt in text editor bang terminal*************
- xdg-open video_name/text_name    (xem toan bo lenh: /usr/bin)

************************************************************************

*********** mo file html code dung firefox/googel chrome ***************
- firefox/google-chrome html_file_name

************************************************************************

*********** tu khoa static trong c/c++ *********************************
++ bien static co gia tri trong toan chuong trinh khong phai chi trong ham con chua no ++

+ bien static trong ham: khoi tao bien 1 lan du ham chua dong khoi tao bien do duoc goi nhieu lan, gia tri truoc do 
cua bien se duoc su dung thay vi khoi tao lai bien do

+ bien static trong class: cung tuong tu nhung vi khong duyoc phep khoi tao gia tri bien trong constructor nen phai 
khoi tao ben ngoai (khoi tao truoc khi su dung), cung cap voi constructor va destructor

+ ham static: static function chi duoc phep truy cap vao bien static hoac ham static khac ma thoi, khi truy cap vao
static member nen dung toan tu phan giai pham vi (:: operator)

************************************************************************

*********** bash script ************************************************

#!/bin/bash
count=1
while [ $count -lt $(($#+1)) ]
do
if [ ${!count} = "x" ]   # get argument nth automatically
then
	((count1=count+1))
	x=${!count1}
elif [ ${!count} = "y" ]
then
	((count1 = count + 1)) # call math have to use "(("
	y=${!count1}
elif [ ${!count} = "z" ]
then
	((count1 = count + 1)) 
	z=${!count1}
fi
((count += 1))
done
echo $x -- $y -- $z

************************************************************************

********** how to see all installed package on linux *******************
apt list --installed

************************************************************************


********** Python.h trong linux ****************************************
 - /usr/include/pythonx.x/Python.h

************************************************************************

********** cac buoc boot trong linux ***********************************
note: ca u-boot va kernel deu co 3 lop: + layer core (arm cortexA8...)
					+ SoC layer
					+ board layer

  b.1)  + ROM bootloader (co san ko the thay doi) se load hoac bootloader (u-boot)
	hoac secondary program loader vao internal memory (khi bootloader u-boot qua lon khong
	vua voi internal memory --> ROM bootloader se tai secondary program loader vao internal memory
	thay vi tai bootloader u-boot).
	+ O trong ROM bootloader co co che kiem tra vung nho, noi ma SPL duoc luu, de dam bao an toan, SPL thuong duoc tao nhieu ban,
	khi ROM bootloader check ban nay hong se dung ban tiep theo.
	+ ROM bootloader co the su dung vai peripheral I2C, UART vi ROM bootloader tai SPL, u-boot dua vao cac chan "boot mode pin", 
	1 so boot mode se chi tim SPL, u-boot o NAND flash, trong khi do 1 so boot mode khac se tim theo thu tu: NAND flash --> I2C interface
	--> MMC ---> UART inteface 
  b.2) Sau do bootloader u-boot se duoc tai len (boi ROM bootloader hoac secondary program loader (SPL) tuy vao b.1,
	sau khi SPL duoc tai no se khoi tao cac gia tri cho process can thiet (vidu: xung clock), u-boot se dua SPL
	de khoi tao gia tri de khong bi trung nhau
  b.3) Sau khi tai u-boot thanh cong, u-boot se tai kernel len 

************************************************************************

************* cac file u-boot va tac dung cua no ***********************

1) u-boot -> executable file in ELF format, duoc su dung cho trinh go loi (debugger)
2) u-boot.bin -> executable that run on the device
3) u-boot.img -> chua u-boot.bin va co header de chi cho boot ROM (co the xem la ROM
bootloader) biet noi nao de tai u-boot.bin (khac voi boot mode pin, chan dung de chon boot mode)
4) u-boot.srec -> chay tren dinh dang Motorola S-Record thong qua ket noi noi tiep (serial)
5) MLO la secondary program loader (SPL)

************************************************************************

******* loi undefined referenece khi bien dich bang gcc*****************
- fix:  1) dung g++ thay vi dung gcc (day la van de cua linker)
		2) van dung gcc : gcc -g -o [name].exe .c/cpp file -lstdc++

************************************************************************

*************** su dung eagle pcb **************************************
- them thu vien ben ngoai: check vi tri can them file: mo eagle --> vao control_panel --> chon libraries (check folder path)
--> copy thu vien vao folder path tren --> tao 1 project schematic moi --> open library manager --> avalilable --> chon file thu vien
--> chon use --> ok

- trong layout: hay chon tOrigins (View -> layout setting)

- tao lable cho 2 dau day: tao label cho 1 dau, dau con lai se chon icon R2 Name --> nhay dup vao dau can tao lable con lai
************************************************************************

**** luong chay cua u-boot/Makefile trong u-boot bootloader project*****
tu lenh chay: make evb-rk3399_defconfig (vidu)
--> dong 564 se nhan dong lenh nay va chay vao trong scripts/kconfig/Makefile de chay tiep

************************************************************************

********************* tu hoc makefile **********************************
- output: source.c  (command nay yeu cau check file source.c (cung la $<, prerequisites) co bi thay doi khi (make command duoc goi) khong
	g++ $< $(CFLAGS) -o $@
	trong cau lenh nay: $< dai dien cho input (source files)
						$@ dai dien cho target 
						cau lenh tuong duong: g++ source.c -g -Wall -o output.exe

- := co nghia la gan gia tri cho bien va bien do khong the gan gia tri khac duoc nua,
  = gan gia tri nhu thong thuong, bien co the co gia tri khac xuyen suot makefile

- khi make thuc hien viec include file theo Makefile, neu co file nao ko duoc tim thay, make se tam thoi bo qua,
tiep tuc include sau do se quay lai include nhung file ko tim thay 1 lan nua, neu van khong thay -> dump fatal error va thoat.
De buoc make ko tao fatal error trong truong hop nay co1 the dung, -include hoac sinclude command

- dump message trong Makefile: $(info "noi dung can in ra man hinh")

- fix undefined referrence to ... when change filesystem --> experimental/filesystem: add stdc++fs to link library list

- make -C ./path_to_build_folder    (tuc la tro toi thu muc chua Makefile, va build moi thu o trong thu muc do)



************************************************************************


*************** cach tuy bien kernel ***********************************
voi source code tu orange pi, sua external/config/kernel/linux-rk3399-legacy.config
--> sua Makefile trong driver --> sua Makefile trong Driver/phy/rockchip
--Note:
orangepi-build/kernel/orange-pi-4.4-rockchip64/drivers/phy/rockchip
orangepi-build/kernel/orange-pi-4.4-rockchip64/drivers/
da bi chinh sua boi TD (2 file nay nam trong source code kernel duoc tai xuong boi main.sh (lenh fetch_from_repo)
hoac tu tai tai (https://github.com/orangepi-xunlong/linux-orangepi.git)roi doi ten sang orangepi-4.4-ckchip64 

  **Noi incude cac thu vien trong cac file .c la kernel/include (voi source code cua OS tai tu orangepi)

- when use build.sh to build, if don't automatically need pull source from git, set IGNORE_UPDATES = yes (sudo build.sh IGNORE_UPDATES=yes)
    --> the modify source will be not changed
    other way: comment this line in general.sh script: git checkout -f -q HEAD. This way can be use to add custom driver into driver folder

************************************************************************

******************** .o and .ko file (kernel) **************************
- .o file is user space program object file
- .ko file is object file used by kernel (kernel object), .ko file is created by linking .o file (user space program object file) and another object file,
which compile from .mod.c file (contain additional info for kernel).
- we can modify this file (.mod.c file) by modpost command (kernel/A/scripts/mod/  , A folder maybe exist or not, optional),
modify .ko by insmod command
- Referrence: https://tldp.org/HOWTO/Module-HOWTO/linuxversions.html

************************************************************************

************** cut and paste command ***********************************
- we can cut and paste writing command ($ ....) on terminal by ctrl + k to cut from cursor to begin, ctrl + u to cut from cursor to end,
ctrl + y to paste it intoorther command ($....)

************************************************************************

************************* error khi update *****************************
- Sau khi chay lenh sudo ./build.sh de build OS cho orangepi, no se tao aptly.list trong /etc/apt/source.list.d/, dieu nay se gay ra loi NO_PUBLICKEY 
khi chay lenh sudo apt/update (do do hay bo qua loi nay khi update he thong)

************************************************************************

*********** list all installed package and it's path  on android *******
- list all package: adb shell pm list package -f (-f is option to show tha path)
- to see all package via terminal: adb shell --> su --> enter (su is sudo on android)

************************************************************************

**************************** su dung eagle pcb *************************
- chon bieu tuong polygon, roi ve duong vien cua lop phu nay 
- de bat grid: nhan F6
- de chuyen linh kien tu layer nay sang layer khac: nhan chuot giua, chuot giua cung tao via khi dang o che do di day
- de cho 1 via (duoc them vao sau) duoc noi den GND (phu dong), dung R2(Name) button va dat ten cho no la GND la duoc
- Ratnest button dung de phu dong cho vung polygon (tu tao), và command: ripup @; là de xoa ratnest này, de ratnest lai
- khi 1 pin noi (smd pin) da noi voi GND area (polygon area) nhung van con bao airline do routline của GND area qua lon
--> chon vung GND (polygon) area -> chuot phai (hoac chon nut info (chu i) cung duoc)--> properties
--> doi width cho phu hop (thuong la chon nho hon gia tri hien tai)
************************************************************************

************************** (flash OS to EMMC) **************************
- script install_to_emmc.csh nam o: https://github.com/loboris/OrangePi-BuildLinux.git
- check health status of emmc : sudo mmc extcsd read /dev/mmcblkx (sudo fdisk -l de biet emmc mmcblk nao)

**update: - use this script in https://drive.google.com/file/d/1tfb-wv5ZQj6LbJjQ231QpHrnkaHUxjti/view?usp=sharing
            + copy u-boot-sunxi-with-spl.bin, boot.cmd, boot.scr to /opt/boot
            + run this script
            + after running without error, run sudo fdisk -l to see parition of emmc
            + sudo mount /dev/[partition of emmc]p2 (which ext4 format) /mnt
            + cp dtb-[kernel version] --> ./dtb folder, cp uInitrd-[kernel version] --> uInitrd, vmlinuz[kernel version] --> zImage (/boot folder)
            + change rootdev=UUID in orangepiEnvt.txt, remove "hdmi.audio=EDID:0 disp.screen0_output_mode=${disp_mode}" in bootargs, 
              remove console=tty0 from "...console=ttyS0,115200 console=tty0" in boot.cmd file (run mkimage to re-gen boot.scr)
              (see "dump kernel message when boot to serial port" below)

************************************************************************

************** copy file tu may duoc access thong qua ssh **************

^^^must open new terminal^^^

- scp dia chi file (o may cua minh) user@ip_address:/folder_destination/ (cua may duoc access thong qua ssh)
v.d:
scp /home/hello/Desktop/findScriptToFlashEMMC/OrangePi-BuildLinux/install_to_emmc  root@192.168.100.10:/home/orangepi

==update==
- Failed to add the host to the list of known hosts (/home/arar/.ssh/known_hosts).
--> sudo chown -v $USER ~/.ssh/known_hosts

************************************************************************


********************* upload os into eMMC cho orangepi 4B **************
- thao the nho ra khoi bo (de the SD van vao recovery mode duoc nhung khong flash firmware duoc, tren orangepi 4b 
nhan nut recovery sau do nhan nut reset, the nut reset giu nut recovery 3s)
- khi dang co san android 8.1 trong eMMC, chon reboot to bootloader de vao MASKROM mode cua rockchip
- install android OS to eMMC qua usb c tren orangepi (tool Linux_Upgrade_Tool_v1.21, android Image tai tu orangepi):
	+ cd toi Linux_Upgrade_Tool_v1.21, sau do chay lenh: sudo ./upgrade_tool de check board duoc nhan boi PC chua)
	+ sudo ./upgrade_tool ef android OS image Erase EMMC (xoa eMMC)
	+ sudo ./upgrade_tool uf android OS image Burn to EMMC (install android OS to EMMC), sau khi chay lenh nay, upgrade_tool bao
Download Loader fail (nhung thuc te android OS da duoc cai ok, reboot lai board orangepi (ko insert the SD), android OS se duoc chay)

************************************************************************

*********************** loi khi build kernel ***************************
-khi build kernel ma gap loi:
		"multiple (or no) load addresses:
		This is incompatible with uImages
		Specify LOADADDR on the commandline to build an uImage"
	-->la do khi chay lenh compile uImage khong truyen vao LOADADDR, fix truyen 0x10008000 vao cho LOADADDR:
		make ARCH=arm LOADADDR=0x10008000 CROSS_COMPILE=arm-linux-gnueabihf- uImage modules
************************************************************************


******************* loi khi rootfs (full OS) ***************************
[[[tham khao]]]: https://forum.armbian.com/topic/2178-compilesh-fails-with-error-in-function-create_rootfs_cache-debootstrap-ngsh157/
-khi build rootfs ma gap loi:
        E: Failed getting release file http://localhost:3142/httpredir.debian.org/debian/dists/wheezy/Release
		
        --> them NO_APT_CACHER=yes vao  scripts/compile.sh (dau file) hoac thu setting Debian mirror khac o userpatches/lib.config nhu:
            DEBIAN_MIRROR='ftp.si.debian.org/debian/
        
************************************************************************

************ compile u-boot, kernel from scratch ***********************
tham khoa tai: http://www.orangepi.org/Docs/Building.html
truoc tien, export nhung bien nay:
	export ARCH=arm
	export DTC_FLAGS="-@"
	export PATH=~/gcc-linaro/bin/:$PATH
	export CROSS_COMPILE=arm-linux-gnueabihf-
	#export CROSS_COMPILE=arm-none-linux-gnueabihf-
(co the tao file exportCompile roi source cung duoc)

1) compile u-boot:
- clone u-boot source code: github.com/orangepi-xunlong/u-boot-orangepi.git
- make the u-boot configure:
	make CROSS_COMPILE=arm-linux-gnueabihf- Orangepi_defconfig
- make the u-boot:
	make CROSS_COMPILE=arm-linux-gnueabihf-
--> sau buoc nay se duoc: u-boot-sunxi-with-spl.bin, u-boot.img, u-boot.bin,
spl/sunxi-spl.bin neu ko bi loi.
2) build script.bin:
- clone sunxi-tools: github.com/linux-sunxi/sunxi-tools
- clone sunxi-boards: github.com/linux-sunxi/sunxi-boards
- cd toi sunxi-tools:
	make
--> se duoc fex2bin, bin2fex sau buoc nay
- tao script.bin:
	${sunxi_tools}/fex2bin xunlong_orange_pi_pc_plus.fex script.bin
	(dung o sunxi-boards, chay fex2bin o sunxi_tools, 
	xunlong_orange_pi_pc_plus.fex o sunxi-boards/sys_config/h3/)
3) build the kernel:

** Note: use -j$(nproc) not -j${nproc} --> cause outof mem in < 1 mins, to specify number of CPU
- clone kernel source code: github.com/orangepi-xunlong/linux-orangepi.git
- set default kernel config:
	make ARCH=arm, CROSS_COMPILE=arm-linux-gnueabihf- sunxi_defconfig (dung orangepi_defconfig se bi loi)
- make to change kernel config (optional):
	make ARCH=arm, CROSS_COMPILE=arm-linux-gnueabihf- menuconfig
- make the uImage and modules (o buoc nay se bi loi( nhu "loi khi build kernel" o tren + cach fix):
	make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- uImage modules -j$(nproc)
- make full module tree:
	make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- INSTALL_MOD_PATH=output modules_install
--> cac file duoc tao: uImage (arch/arm/boot/), output/lib/modules/x.x...

************************************************************************

******** create bootable sd card from kernel, u-boot o tren ************
tham khao tai: http://www.orangepi.org/Docs/Settingup.html
- partitions and format:
	+ export card=/dev/sdb ; export p="" (neu the gan trong usb adopter)
	+ export card=/dev/mmcblk0 ; export p=p (gan bang khe doc the)
	+ tao phanvung:
		sudo fdisk ${card} -->n -->p -->1 -->2048 -->+20M (tao phan vung 1)
		n -->p -->2 -->43008 -->enter (tao phan vung 2)
		-->w -->enter
	+ format: 
			sudo mkfs.vfat ${card}${p}1	
			sudo mkfs.ext4 ${card}${p}2

- bootloader:
	+ erase sd:
		sudo dd if=/dev/zero of=${card} bs=1k count=1023 seek=1
	+ burn bootloader:
		sudo dd if=${u-boot-dir}/u-boot-sunxi-with-spl.bin of=${card} bs=1024 seek=8

- boot script:
	+ mount first partition:	
		sudo mount ${card}${p}1 /mnt
	+ tao boot.scr
		++ tao boot.cmd trong /mnt, voi noi dung sau:
#################
setenv bootargs console=ttyS0,115200 noinitrd 
disp.screen0_output_mode=EDID:1280x720p50 init=/init
root=/dev/mmcblk0p2 rootwait panic=10 ${extra}
fatload mmc 0 0x43000000 script.bin 
fatload mmc 0 0x48000000 uImage 
bootm 0x48000000
#################
		++ tao boot.scr:
			sudo mkimage -C none -A arm -T script -d /mnt/boot.cmd /mnt/boot.scr
	
	+ tao uEnv.txt trong /mnt voi noi dung nhu sau:
#################
bootargs=console=ttyS0,115200 disp.screen0_output_mode=EDID:1024x768p50 hdmi
aload_script=fatload mmc 0 0x43000000 script.bin;
aload_kernel=fatload mmc 0 0x48000000 uImage;bootm 0x48000000;
uenvcmd=run aload_script aload_kernel
#################

- kernel:
	+ copy uImage va script.bin toi first partition (tuc la /mnt, phan vung 20M)
	+ umount partition nay:
		sudo umount /mnt
---> bo the vao bo test thu (chu yeu de test bootloader)
************************************************************************

********* build va flash u-boot via sunxi-fel orangepi pc/pc+ **********
- build (don gian hon o tren):
    + git source code -->
make CROSS_COMPILE=arm-linux-gnueabihf- orangepi_pc_defconfig (orangepi_pc_plus_defconfig neu la pc plus)
    + make CROSS_COMPILE=arm-linux-gnueabihf- menuconfig (optional)
    + make CROSS_COMPILE=arm-linux-gnueabihf-
- flash u-boot via sunxi-tool (sunxi-fel) (nen ket noi dong thoi uart-putty de xem u-boot sau lenh flash):
    + sudo sunxi-fel -v uboot u-boot-sunxi-with-spl.bin

************************************************************************


********** cach debug file thu vien .h/.cpp tren arduino ***************
- them #include <Arduino.h>, #include <SoftwareSerial.h> dong thoi khoi tao 1 SoftwareSerial object trong file .cpp dang muon debug
- tai dong code muon debug trong file c.pp, khoi chay SoftwareSerial object (.begin(baudrate)) ---> use this object to print line (println)

- to source code can be run in gdb:
    + this file must be compile, configure in Makefile : -g (or -ggdb -o0 or -DDEBUG) in cmake it is: set(CMAKE_BUILD_TYPE Debug) or see(CMAKE_CXX_FLAGS "-[above option]") 
    + the executable (ELF) can run for this architecture (for cross compile caes)


************************************************************************

********* xem chi tiet cua insmod error (linux)********************************
- run sudo insmod [.ko file] --> dmesg | tail -1 --> xem chinh xac la loi gi

************************************************************************

************* cach tao usb boot (linux software) ***********************
- dung Ventoy (back up tren drive (cda account), hoac tu git: https://github.com/ventoy/Ventoy
- cach cai win tu phan mem ghost: tai file ghost ve, xem la file ghost tu phan mem ghost nao (vd: .tib: arconis true image), vao trang web do tao tk (trial 30 ngay (tu 25/05/2022) cda257....gmail.com, mk acronistrueimage)
--> product --> rescure boot media (.iso file) --> dung ventoy de tao usb boot nhu khi lam cho .iso cua HDH.
- file ghost (.tib) nên de trong 1 usb khac duoc dinh dang la ntfs de arconis true image co the nhin thay khi chay o bios

************************************************************************

****************** loi dinh dang khi cai win ***************************
- sua loi khong cai window duoc vi phan vung ko giong dinh dang: tai man cua so do, nhan shift + F10 (mo command prompt) --> diskpart -->enter
--> list disk --> enter --> chon o dia can format: select Disk x --> enter --> clean --> enter --> convert GPT (day la truong hop can chuyen tu MBR sang GPT) --> enter

- dung command: du -sh [path] de xem dung luong cua file/folder

************************************************************************

************************** build .dtb file *****************************
- dtc can be installed by this command on linux:

	sudo apt-get install device-tree-compiler

- you can compile dts or dtsi files by this command:

	dtc -I dts -O dtb -o devicetree_file_name.dtb devicetree_file_name.dts

- you can convert dts to dtb by this command:

	dtc -I dts -O dtb -f devicetree_file_name.dts -o devicetree_file_name.dtb

- you can convert dtb to dts by this command:

	dtc -I dtb -O dts -f devicetree_file_name.dtb -o devicetree_file_name.dts
************************************************************************


************** cach dung for thay cho foreach **************************
-thay tu trong nhieu file:
    for varName in `find ./ -name "*.tenMoRong"` -->enter
    do --> enter
    sed s/tuCanthay/tuThay/g -i $varName -->enter
    done -->enter

************************************************************************


************** tao intial RAM disk (uIinitrd.img) **********************
tham khao: https://www.opensourceforu.com/2014/03/building-embedded-system-based-initial-ram-disk/
- tao file initrd.img bang dd: 
    dd if=/dev/zero of=path_output/initrd.img bs=$expectSize count=1 (thuong size =4096K, count=1 tuc la tao 1 file)
- convert initrd.img to file system:
    mke2fs -F -m 0 -N 100 initrd.img
- convert to RAM disk format:
    sudo mkimage -A arm -O linux -T ramdisk -C none -a 0 -e 0 -n uInitrd -d path_to_initrd.img pathToOutput/uInitrd.img
(mkimge : sudo apt install u-boot-tools)
************************************************************************

********************** lenh burn to board ******************************
sunxi-tools/sunxi-fel -v -p uboot u-boot-orangepi/u-boot-sunxi-with-spl.bin write 0x42000000 linux-orangepi/arch/arm/boot/uImage write 0x43100000 script.bin write 0x43000000 sun8i-h3-orangepi-pc-plus.dtb write 0x43300000 uInitrd.img write 0x43200000 boot.scr

************************************************************************

************************ meo dung tren linux ***************************
- mo disk utils (xem phan vung o dia): 
	gnome-disks (trong goi: gnome-disk-utility)

- ung dung khoi dong cung he thong:
	gnome-session-properties (trong goi: gnome-startup-applications)

- ...swap//: // buoc swap file luu voi path day du

- chuyen swap file sang .vim/swapfiles:
    mkdir -p $HOME/.vim/swapfiles  (tao folder swapfiles)
    set directory=$HOME/.vim/swapfiles//

- hide top bar:
    sudo apt install gnome-shell-extension-autohidetopbar

- cat video: ffmpeg -i inputVideo.mp4 -ss 00:01:52 -c copy -t 00:00:10 output.mp4  (00:00:10 --> length output video

- convert mp4 to mp3: ffmpeg -i video.mp4 -vn -acodec libmp3lame -ac 2 -ab 160k -ar 48000 audio.mp3

- build-in command linux:
	+ dirname "/home/hello/to/test.txt"  --> /home/hello/to (remove last slash)
	+ base    "/home/hello/to/test.txt"  --> to  (get slash before last slash)
	+ realpath "/home/hello/to/test.txt" --> show path of file that used to create test.txt by ln -s command
	+ BASH_SOURCE:-$0                    --> get name script run   (/home/hello$ script.sh --> script.sh)
	+ $(command)                         --> command: built-in command of LinuxOS
	+ ${var}                             --> var: var in script or environment


- source vs .
	run script: ./myscript.sh --> open new shell --> run myscript.sh --> copy output to current shell, close new shell   (./ due to current directory not in $PATH, no need ./ if it in $PATH,
	to add it to PATH: PATH=current_directory:$PATH)
	--> no change effect to current shell by run myscript.sh
	source script: run script in current shell
	--> all change by run this script will be applied to current shell
	**(source by source ./myscript.sh -- run script as mentioned above <==> . ./myscript.sh -- script will not run but it must be valid (it's mean if run command "source myscript.sh" it's OK)
	**(source like a include: insert all script to script which called it)
[[ref]] https://superuser.com/questions/176783/what-is-the-difference-between-executing-a-bash-script-vs-sourcing-it


- reserve ctrl-z command:
    bind -x '"\C-a":"fg"'  (ctrl-a)

- no feedback to terminal when typing: reason dump  binary to STDOUT (test: run script with read input from user command: read, but ctrl-c without type input)
  --> fix: type reset --> enter 

- bitwise "!" vs "~" : ~ revert all byte wheras ! revert LSB bit of least significant byte (LSB)

- tao shortcut voi env desktop ko co show desktop command: install wmctrl, tao 1 scritp trong /usr/bin (de cho de gan lenh trong phan tao shortcut mac dinh)
dung lenh wmctrl -k on/off (khong lay duoc trang thai) vi du:

	+++++++++++++++++++++++++++++++++++++++++++++++++
	#!/bin/bash
	file='/home/dell/paraCheckFor_showDesktop.txt'


	while read Line; do 
	status=$Line
	done <$file
	if [[ $status != "on" ]]
	then
	    wmctrl -k on
	    echo "on" > '/home/dell/paraCheckFor_showDesktop.txt' 
	else
	    echo "off" > '/home/dell/paraCheckFor_showDesktop.txt' 
	    wmctrl -k off
	fi
	+++++++++++++++++++++++++++++++++++++++++++++++++

- set foldcloumn=0 to turn off gray bar in leftside in vim

- list all version of GLIBC: strings /usr/lib/x86_64-linux-gnu/libstdc++.so.6 | grep GLIBC
- update to get GLIBCX_3.4.26 for ubuntu18:
    + sudo add-apt-repository ppa:ubuntu-toolchain-r/test
    + sudo apt update
    + sudo apt upgrade

- fix : no code MPEG-4 AAC:
    sudo apt install libdvdnav4 libdvdread4 gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly libdvd-pkg

- remove lock symbol in folder: sudo chown -R $USER: $HOME

- error "rsync symbolink ...failed: Operation is permited" --> consider repalce -l by -K or -a (due to symbolink linking not support for FAT partition)

- in .cpp, if want to dump a string by using printf, we must convert the string to c string (cpp_string_var.c_str())

- a = b < 0 --> a = ?, if b < 0 (statement is true) --> a = 1, else if b > 0 --> a = 0  --> this is  a ternary case


************************************************************************


***************** set title for terminal tab *************************** 
- them doan code ben duoi vao ~/.bashrc

    function set-title() {
      if [[ -z "$ORIG" ]]; then
	ORIG=$PS1
      fi
      TITLE="\[\e]2;$*\a\]"
      PS1=${ORIG}${TITLE}
    }

- cach dung: set-title terminal_tab_title_name

- dung thang lenh duoc ho tro tren xfce4-terminal (kubuntu: /usr/bin): xfce4-terminal --tab --title=titleName (xfce4-terminal --tab : open new tab)

************************************************************************

**************** fix loi khi nap u-boot orangepi borad *****************
- file boot.scr da dung, dia chi write uboot da dung nhung bi bao loi khi
khi chay u-boot, vi source code chua dung (dung u-boot-orangepi, khong dung
tu u-boot.git)
- not found uImage||dtb file||uInitrd hay check lai dia chi o bootm,
theo thu tu kernel (uImage) --> ramdisk --> dtb, khong co khac 

************************************************************************

************* enable mmc bootbus in u-boot mode ************************
- voi source code mainline u-boot , de u-boot chay duoc mmc bootbus, can enable CONFIG_SUPPORT_EMMC_BOOT (trong u-boot/cmd/boom.c)
- cac lenh uboot ko goi duoc trong u-boot prompt nhung co trong bootm.c co the do khong duoc lien ket trong file u-boot/cmd/bootm.su (u-boot mainline)

************************************************************************


******************* yocto project va orangepi **************************
trang tham khao: https://girishjoshi.io/post/build-image-for-orangepi-zero-using-yocto-project/
repo: https://github.com/Halolo/orange-pi-distro

- khi clone ve het cac source code:  git checkout cac meta-* (tru meta-opi), poky ve tag thud hoac sumo (hien tai nam 2022), sau do moi co the build duoc
  (tuy van con loi o qua trinh build phia sau, nhung lam buoc nay giup ta ko phai fix 1 nui loi truoc khi co the bat dau build)

- cac loi cac the gap phai: 
    + loi override old syntax (do khac version cua bitbake: ten bien viet hoa + "_" + viet thuong), fix: doi "_" -> ":" o giua chu hoa va chu thuong)
    + loi ten bien khong dung(?!), thong bao loi hien ra la chu viet thuong het --> doi thanh chu viet hoa het
    + khong co file sanity.conf, default.conf --> tu tao sanity.conf trong build/conf/sanity.conf, build/conf/multiconfig/default.conf
    + FuncFailed not attribute of ... (checkout lich su thay doi cua file bitbake/lib/bb/Build.py (git log --follow -p path_to_file) ---> copy ve
    (tot nhat hay checkout nhu buoc o tren de tranh cac loi)

- create sdk : cd  ./build ---> MACHINE=orange-pi-pc-plus bitbake opipcplus-minimal -c populate_sdk 

- dump message in yocto recipe
    + add logging lib to recipe (.bb) : inherit logging (poky/meta/classes/logging.bbclass)
    + use bbwarn "message wanna show"   (bbwarn, bberror, bbnote)

************************************************************************

**************** cach tao SDcard bootable opipcplus ********************
-   file can: u-boot-sunxi-with-spl.bin, sun8i-h3-orangepi-pc-plus.dtb, boot.scr, script.bin, orangepiEnv.txt, zImage, uInitrd (nen dung file ko dung file link)
-   dd u-boot-sunxi-with-spl.bin vao the sdcard voi bs=1024 seek=8 (32 bit)
-   dung fdisk tao 2 phan vung, phan vung 1 chon W95 FAT (LBA) bang cach nhan t nhan tiep c ngay trong terminal cua fdisk
    phan vung 2 cu de mac dinh vay 
-   dinh dang phan vung 1 bang mkfs.vfat (khong anh huong den w95 FAT (LBA) o tren, phan vung 2 mkfs.ext2 (phai la ext2, neu khong se bi loi initfs)
-   copy cac file ke tren tru file u-boot-sunxi-with-spl.bin vao thu muc boot (mkdir phan_vung_1/boot), copy tat ca folder cua 1 iso khac de vao trong phan vung 2 (tao rootfs)
-   trong file orangepiEnv.txt sua rootdev=UUID=gia_tri quan sat thay khi cd /media/pc_name/phan_vung_2, neu khong se khong boot duoc (blkid command to see UUID)
-   umout sd card va boot
* hien tai chi boot duoc tren serial, con HDMI van chua boot duoc (test tren orangepipcplus)

************************************************************************


******** fix loi khong thay lzma  python (ko co attribute _lzma) *******
- go python vua cai , install liblzma-dev, lzma
    sudo apt install liblzma-dev lzma
--> sau do cai dat lai python ban mong muon (bi loi nay nay khi cai dat idf lap trnh cho esp32

- fix loi khong thay _sqlite3 module:
    + install sqlite3: sudo apt install libsqlite3-dev 
    --> cd to python install folder (locate configure file)
    --> run ./configure --enable-loadable-sqlite-extensions --enable-optimizations --> sudo make --> sudo make install --> ok (test: import sqlite3)

************************************************************************


********* install sqlite3, libasound for arm-linux-gnueabihf-gcc ******************

tham khao https://medium.com/geekculture/start-using-the-sqlite-database-while-programming-with-c-on-beaglebone-black-arm-and-embedded-809e5eea2a21
          https://www.alsa-project.org/pipermail/alsa-devel/2009-October/021902.html
-sqlite3

    + download: wget http://www.sqlite.org/2017/sqlite-autoconf-3160200.tar.gz --> tar -xvf pathToFile --> cd to this folder
    --> sudo ./configure CC=/usr/bin/arm-linux-gnueabihf-gcc  --prefix=/usr/
    --> sudo make --> sudo make install
    voi configure nhu tren, libasound se duoc cai o /usr/local/lib sau khi chay sudo make install, khi su dung voi cmake, mac dinh se khong co /usr/local/lib trong link directory,
    de tim duoc libsqlite3, su dung find_library va target_link_libraries (vi du duoi day se dung bien tao boi find_library trong mot ham khac)

##            find_library(SQLITE sqlite3 HINTS /usr/local/lib)
##
##            set(CUSTOMISED_LIBS
##                pthread
##                #/Compilers/SQLite_for_ARM/lib/libsqlite3.a
##                #sqlite3
##                asound
##                stdc++fs
##                ${SQLITE}
##                ${DLT_LIBRARIES}
##            )





-libasound:
    + download: https://fossies.org/linux/misc/alsa-lib-1.2.7.2.tar.bz2/
    --> CC=/usr/bin/arm-linux-gnueabihf-gcc ./configure --host=arm-linux
    --> sudo make
    --> sudo make install
    voi configure nhu tren, libasound se duoc cai o /usr/lib sau khi chay sudo make install

 **(./configure --help de cau hinh, ko tuy thuoc vao cau lenh ./configure o tren)

-  loi: automake-1.16: command not found when sudo make --> sudo apt install automake (if not installed) --> autoscan --> aclocal --> 
         automake --add-missing --> autoconf --> ./configure --> sudo make (run again)






************************************************************************




*********** cach them ung dung  vao image tren yocto *******************
- trong meta- chinh dang compile (ko tinh poky), them recipes de chua source code: recipes-xxx/helloworld/file/src   (file/src do trong .bb file:://src <--> /file/src/)
tao 1 .bb file trong helloworld voi noi dung nhu sau:

	SUMMARY = "test application helloworld"
	DESCRIPTION = "Custom recipe to build helloworld.c application"
	LICENSE = "MIT"
	LIC_FILES_CHKSUM = "file://${COMMON_LICENSE_DIR}/MIT;md5=0835ade698e0bcf8506ecda2f7b4f302"

	# Where to find source files (can be local, GitHub, etc.)
	SRC_URI = "file://src"

	# Where to keep downloaded source files (in tmp/work/...)
	S = "${WORKDIR}/src"

	# Pass arguments to linker
	TARGET_CC_ARCH += "${LDFLAGS}"

	# Cross-compile source code
	do_compile() {
	    ${CC} -o helloworld helloworld.c (danh cho khi compile ung dung c, neu co)
	    ${CXX} -o hello_world hello_world.cpp (danh cho khi compile ung dung cpp, neu co)
	}

	# Create /usr/bin in rootfs and copy program to it
	do_install() {
	    install -d ${D}${bindir}
	    install -m 0755 helloworld ${D}${bindir} (cap quyen de ung dung chay, tuy so ung dung them vao image)
	}
- cau hinh cho ung dung tu chay sau khi boot (trong image file):
    + tao  file recipes-xxx/systemd/helloworldsystemd_1.00.bb voi noi dung nhu sau

	LICENSE = "CLOSED"
	inherit systemd

	SYSTEMD_AUTO_ENABLE = "enable"
	SYSTEMD_SERVICE_${PN} += "helloworld.service"
	SYSTEMD_SERVICE_${PN} += "hello_world.service"

	SRC_URI_append += " file://helloworld.service "
	SRC_URI_append += " file://hello_world.service "
	FILES_${PN} += "${systemd_unitdir}/system/helloworld.service"
	FILES_${PN} += "${systemd_unitdir}/system/hello_world.service"

	do_install_append() {
	  install -d ${D}/${systemd_unitdir}/system
	  install -m 0644 ${WORKDIR}/helloworld.service ${D}/${systemd_unitdir}/system
	  install -m 0644 ${WORKDIR}/hello_world.service ${D}/${systemd_unitdir}/system
	}
    + tao file service tuong ung voi ung dung can autoboot:
	
	tao file recipes-xxx/systemd/files/helloworld.service voi noi dung nhu sau:
	
	[Unit]
	Description=GNU Hello World startup script for KOAN training course

	[Service]
	ExecStart=/usr/bin/helloworld

	[Install]
	WantedBy=multi-user.target


************************************************************************

***************** su dung gpio tren esp32 esp-idf **********************
- cau hinh: 
    + gpio_pad_select_gpio(numOfPin);
    + gpio_set_direction(numOfPin, GPIO_MODE_OUTPUT/INPUT/INPUT_OUTPUT);
    + gpio_set_pull_mode(numOfPin, GPIO_PULLUP_ONLY/PULLDOWN_ONLY/PULLUP_PULLDOWN);
    + gpio_set_level(numOfPin, 0/1); //write
    + gpio_get_level(numOfPin); //read
-[loi khi compile] error: implicit declaration of function 'gpio_pad_select_gpio'; did you mean 'esp_rom_gpio_pad_select_gpio'? [-Werror=implicit-function-declaration]
--> them rom/gpio.h vao2 trong components/driver/include/driver/gpio.h


************************************************************************

******************* tim hieu tool IDF **********************************
+++ cac file *.cmake duoc noi den nam o tool/cmake/ 

- cac cai dat cua viec build source code deu nam trong ../tools/cmake/build.cmake
- lenh tao file sdkconfig co nam trong ../tools/cmake/project.cmake (idf_build_process(${IDF_TARGET} la lenh do)
file sdkconfig duoc tao ra boi dong nay trong file build.cmake (__kconfig_generate_config("${sdkconfig}" "${sdkconfig_defaults}")) --> 
function(__kconfig_generate_config sdkconfig sdkconfig_defaults) (kconfig.cmake file) --> if(output_sdkconfig) (trong function(__kconfig_generate_config))

***[sdkcongif.defaults]
idf_build_process (project.cmake file) --> macro(idf_build_process) (build.cmake file)--> cmake_parse_arguments()(build.cmake file) --> 
def main() (to initial empty array)(confgen.py file) --> __build_set_default(SDKCONFIG_DEFAULTS "") (build.cmake file) -->def main() confgen.py
-----> se mo nhung file defaults tim thay trong cmake_dir --> copy vao file sdkconfig



- fix install failed when copy whole old esp-idf folder from other computetr into  (--no-warn-script-location) (reason: may be pip is older version)
	+ install python > 3.6, python-pip3  (ex install python3.8)
	+ update-alternatives python 3.8 -> python:
		sudo update-alternatives --install /usr/bin/python python /usr/bin/python3.8 10   (do not touch to python3 , due to it is python3.6 which used by system)
	+ remove pip-9.0.1.dist-info folder:
		sudo rm -rf ../../../.espressif/python_env/idf5.0_py3.8_env/lib/python3.8/site-packages/pip-9.0.1.dist-info/
	+ update pip for python3.8:
		sudo /home/arar/.espressif/python_env/idf5.0_py3.8_env/bin/python -m pip install pip  (this command will install latest version of pip for python3.8)	
	--> done
	**(if above steps are not affect, add lines to ~/.bashrc and run install again:
			if [ -d "$HOME/.local/bin" ] ; then
		  		PATH="$HOME/.local/bin:$PATH"
			fi
	  )
[[ref]] https://stackoverflow.com/questions/63207385/how-do-i-install-pip-for-python-3-8-on-ubuntu-without-changing-any-defaults


************************************************************************

****************** dieu khien gpio tren opipcplus **********************
thanm khao: https://www.kernel.org/doc/Documentation/gpio/sysfs.txt

-cach 1 dung thu vien WiringOP (thu vien chaun c)
-cach 2 dung Userpace trong kernel:
    + truoc khi build    enable (trong menuconfig): Device Drivers --> GPIO Support --> /sys/class/gpio/... (sysfs interface)
khi build kernel
    + sau khi boot kernel vua build:
	echo 12 (pin muon dung, trong opipcplus : PA12) > /sys/class/gpio/export (thong bao cho kernel la dung chan nay lam chan I/O)
	echo out > /sys/class/gpio/gpio12/direction (bao la chan ngo ra, gpio12 se duoc tao sau khi lenh echo 12 o tren)
	
	++ write: echo 1 > /sys/class/gpio/gpio12/value (ghi 1 vao chan 12 (xuat ra muc cao))
	++ read: `cat /sys/class/gpio/gpio11/value` ket qua tra ra la string, co them dem nguyen lenh cat nay dat rong if [[]]

* tuy nhien cach truy cap nay co kha nhieu nhuoc diem nen tu kernel 4.8 tro di da bi bo di roi, thay bang cach moi
************************************************************************

********************************** esp32 *******************************
- nvs_flash_init() --> khoi tao 1 phan vung NVS mac dinh da duoc ma hoa, thuong se tao ket XTS ma hoa trong chip ESP, duoc dung khi NVS encryption
duoc bat len (chay idf.py menuconfig --> security/flash_encryption de bat NVS encryption feature)
- ESP_ERROR_CHECK() --> giong nhu abort(), neu thong so dau vao khac "ESP_OK" --> ham abort() se duoc goi

************************************************************************

*********************** arduino esp8266 wifi ***************************

source code:

#include <ESP8266WiFi.h>
....
WiFiServer server(80);
//ESP8266WebServer server(80);
 

void setup()

{
....

//*------------------HTML Page Code---------------------*//


  
  //client.println("<head><meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">");
  //client.println("<link rel=\"icon\" href=\"data:,\">");
  
  ......
  
 //source code tren drive
}

2 dong client.println tren se khien cho 1 luc chi co 1 thiet bi vao duoc neu co them thiet bi khac truy cap
se dan den ca 2 thiet bi cung ko the truy cap duoc (du truoc do 1 trong 2 thiet bi van ket noi binh thuong)

**mot so link tham khao khac (giai phap khac rat hay)
    https://arduino.stackexchange.com/questions/31256/multiple-client-server-over-wifi
    https://forum.arduino.cc/t/connecting-multiple-clients-with-esp8266/636341

************************************************************************


********* how to fix "you need at least ...GB to install ubuntu" *******
- khi cai dat dual-boot win + linux, voi may dang cau hinh SATA: raid, se bi loi "You need at least ..GB to install ubuntu", cach fix:
    + boot vao win, chay cmd voi quyen admin
    + go lenh bcdedit /set safeboot minial
    + restart vao bios setup --> doi SATA operation tu RAID ON --> AHCI, save + exit
    + boot vao lai win, chay cmd quyen admin, go lenh bcdedit /deletevalue safeboot
    ---> da co the cai linux nhu binh thuong

************************************************************************

****************** compile and install cmake ***************************
- download from terminal
    version=3.23 //change version
    build=2
    ## don't modify from here
    mkdir ~/temp
    cd ~/temp
    wget https://cmake.org/files/v$version/cmake-$version.$build.tar.gz
    tar -xzvf cmake-$version.$build.tar.gz
    cd cmake-$version.$build/


- download source code from cmake.org/files/vx.xx/cmake-x.xx.0-rc2.tar.xz (file nay moi co bootstrap, khong phai clone tu https://github.com/Kitware/CMake
- compile and install: ./bootstrap --> make -j$(nproc) --> sudo make install (loi khong thay compiler ho tro c++11 --> tuc la dang thieu g++, sudo apt install g++ la duoc

=========

- cach dump tin nhan trong cmake:
    message(STATUS "") trong "" co the la chuoi hoac ten bien muon kiem tra gia tri ${}, ten bien phai nam trong {}

- cach them library to linking: use CUSTOMISED_LIBS, ex:
    set(CUSTOMISED_LIBS
	pthread
	sqlite3
	asound
	stdc++fs
	${DLT_LIBRARIES} --> this is var of cmake
    )

- cmake -S path_source_file (chua CMakeLists.txt) -B path_build_folder (chua Makefile duoc gen boi cmake)

- de cmake enable cross compile, trong toolchain file (tu tao) phai co set(CMAKE_SYSTEM_NAME "xx") truoc, roi moi set(CMAKE_SYSTEM_PROCESSOR "xxx") sau, neu khong cmake se khong cross compile

==== tham khao https://cmake.org/cmake/help/v3.17/guide/tutorial/index.html
- # add library
    add_library(MathFunctions mysqrt.cxx)
  # add linking library
    target_link_libraries(Tutorial PUBLIC MathFunctions)
  # add the binary tree to the search path for include files
  # so that we will find TutorialConfig.h
    target_include_directories(Tutorial PUBLIC
                          "${PROJECT_BINARY_DIR}"
                          "${PROJECT_SOURCE_DIR}/MathFunctions"
                          )


************************************************************************

***************** dot (.) in meber of struct ***************************
- no co nghia la khoi tao bien no dung truoc bang gia tri theo sao, vi du
    struct point {int x, y;};
    --> khoi tao: struct point p (2, 3) --> x = 2, y = 3
    hoac struct point p (.y = 4, .x = 3) --> x = 3, y = 5  
    ==> tuc la no cho phep viec khoi tao ko theo trat tu nhu khi khai bao struct (designator initializer)

************************************************************************


*************** system program problem detected ************************
link tham khao: https://askubuntu.com/questions/1160113/system-program-problem-detected

- sudo rm /var/crash/* will delete old crashes and stop informing you about them until some package crashes again.

- You can stop the service with sudo systemctl disable apport (and enable it again with sudo systemctl enable apport)

- If you do not want to see crash reports you can disable it by doing sudo vim /etc/default/apport and changingenabled=1 to enabled=0. (or sudo nano /etc/default/apport). Editing it in reverse will enable it again.

- You can delete the service with sudo apt purge apport (and install it again with sudo apt install apport)

************************************************************************


***************** no public key when update in linux *******************
- sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key [enter key in terminal]
- sudo apt update
************************************************************************

***************** cap phat bo nho trong c dung malloc ******************
- contro cap 2: 
	+ char** ptr = NULL (can tro den den de kiem tra cap phat bo nho thanh cong hay ko)
	+ ptr = (char**)malloc(n * sizeof(char));  ((ptr vs (char**) vi ptr da khai bao la con tro cap 2)
	n la so luong chuoi muon dung (vi du "fdffdfdsff", "sadasdsdasd --> n = 2)"
	--> sai --> sua o duoi
    + for(i = 0; i < n; i++)
	{
		ptr[i] = (char*)malloc(n * sizeof(char));
	}
	--> xong cap phat bo nho
	thu hoi bo nho (free trong thu vein stdlib.h)
	luu y: ko free prt[i] duoc, free(ptr) luc nay se giai phong duoc cac ptr[i] (kiem tra cac control nay se phai bang NULL)
	sau do trong ptr = NULL
    ++luu y: con tro sau khi duco free se khong tu tro ve null, no tro toi vung nho khac (noi cac con tro xem nhu ko con)
    ++kernel se cap phat page --> malloc se chia nho page do, cap phat khi chuong trinh can, page se khong duoc return cho 
    den khi tat ca vung nhi da cap phat duoc giai phong

- cach cap phat vung nho dung con tro 2 chieu:
    + cap phat vung nho cho con tro cap 2 voi, voi ham malloc, ta ep kieu ham malloc tuong ung voi kieu con tro, khi khai bao size,
    phai dung saize cua con tro cap 1(tuc la giam di 1 bac)
    o tren can sua lai: ptr = (char**)malloc(n * sizeof(cahr*)), nhu vay khi giai phong con tro se khong bi core dump


- con tro this trong c++:
	+ access to object's var is hidden by same name local var (knew this case before)
	+ access as chain machanism, ex:
		obj.sum().multi() 
		--> normal case: obj: object
						sum(): function
						multi(): function inside sum()
		--> with this pointer: obj: object
						sum(), multi() is same level function
			ex: in calss Test
				Test &sum(){// something; return *this};
				Test &multi(){// something; return *this};
[[ref]] https://www.geeksforgeeks.org/this-pointer-in-c/


- unique and shared pointer c++ (same as normal pointer but auto deallocated when go out it's scope):
	+ unique pointer:
		std::unique_ptr<data_type> pointer_name ( new data_type() ("()"as constructor if it's class))
		or std::unique_ptr<data_type> pointer_name = make_unique<data_type>()  ("()" as constructor if it's class)
	
	+ shared pointer:
		std::shared_ptr<data_type> pointer_name ( new data_type() ("()"as constructor if it's class))
		or std::shared_ptr<data_type> pointer_name = make_shared<data_type>()  ("()" as constructor if it's class) // first object
		std::shared_ptr<data_type> pointer_name2(pointer_name); //second object (copy constructor)
		std::shared_ptr<data_type> pointer_name = pointer_name; //third object (assigning)
[[ref] https://cppdeveloper.com/c-nang-cao/smart-pointers-stdshared_ptr-trong-c/




************************************************************************


********************* thay the ky tu trong chuoi ***********************
- tim vi tri cua ki tu: *strchr (*str, 'ki tu can tim') vi du: pos = strchr(str, '\0'); tim thay -> pos != NULL
*pos = 'ki tu can thay the'
- khi su dung strncpy (* dest, *src, numOfByte); neu numOfByte lon hon chieu dai chuoi src --> chuoi src se bi sai (printf %s se ko con dung nua),
 tuong tu voi memcpy, luc nay chuoi *dest con lai (cac ki tu con lai) se bi gan la NULL), ---> trong truong hop ko dat ta numOfByte nen dung strcpy, 
 neu khong hay dung strlen(*src) thay cho numOfByte ,
- nen check xem co ton tai '\0' trong chuoi hay chua

- luu y: khi thao tac voi chuoi, co the dung strcmp, strncpy, strcpy, strncat ...
tuy nhien khi co gan gia tri vao cho member cua struct da duoc khoi tao (hoac chua), luc nay ko thao tac voi chuoi nen ko the dung nhung lenh truoc do,
phai dung memcpy, memset

************************************************************************

******** doc wifi credential da luu tren esp32 sau khi restart() *******
- wifi credential duoc luu vao bo nho de dung o lan khoi dong tiep theo sau khi chay lenh esp_wifi_set_config() (khong tinh cac lenh phia truoc nhu trong vi du mau)
 de lay tro ra, dung esp_wifi_get_config(), ham nay can duoc goi sau khi esp_wifi_init(&cfg) duoc chay (khoi tao cac thong so mac dinh cho wifi).


************************************************************************

*************** reset file da git add **********************************
- file da git add, chua git commit: git reset [pathToFile]
--> git checkout this file --> ok (git status de kiem tra)

************************************************************************

***************** dong goi code trong vim editor*************************
- highlight cac dong muon dong goi --> zf, de mo dong foi : za (hoac zo, zc(!?))-> :mkview de luu dang file dong goi
- khi luu va thoat khoi file, vao lai fie van se nhu binh thuong, de tai lai file 
dang dong goi, go :loadview
** de lam viec nay tu dong, them 2 dong vao .vimrc:
    autocmd BufWinLeave *.* mkview
    autocmd BufWinEnter *.* silent loadview

************************************************************************


**************** loi overflow in main task tren esp32 ******************
- khi cap phat/ khoi tao object qua lon (>1024), nhung ko dat trong xTaskCreate(), khi chay se bi loi overflow stack,
co 2 cach giai quyet hoac la giam memory cua oject do xuong hoac la bo no vao trong 1 ham va xTaskCreate ham do

************************************************************************


******** find location of module abc (import abc) python  **************
- cd den noi chua file impoet module --> chay python tuong ung len --> import imp --> imp.find_module('tenModule')

************************************************************************

******************* timer on esp32  ************************************

[[[legacy timer  -- user control individual timer by group, timer]]]

- timer in esp32: (esp32 has 2 group, each group have 2 timer + 1 watchdog timer) --> 5 timer), timer legacy , gptimer with differences

 --> config --> init --> set_count_value  --> set_alarm_count --> enable intr --> add isr callback --> start time
 --> check xQueueReceive

    timer_config_t config (*note clk_src : TIMER_SRC_CLK_DEFAULT, others can be found at library)
    timer_init(group, time)
    timer_set_counter_value(group, timer, value)
    timer_set_alarm_value(group, timer, value)
    timer_enable_intr(group, timer)
    timer_isr_callback_add(group, timer, callback function (user define), *argument of callbackfuntion, intr_flag), if argument of callbackfunction: queue --> queue not &queue)
    timer_start(group, timer)
    xQueueReceive(A queue, *var, delay)  --> queue, address of var that get datat from xQueueSendFromISR in isr callback function, delay --> portMAX_DELAY

** IRAM_ATTR: when compiled, obvject wil be have one .dram.text section beside .text (instuction) and .data(data), when start up this section will be load into DRAM
** TWDT task watchdog, defaults is availble in both CPU 0&1, if in while(true) not put vTaskDelay or vTaskDelete to reset WDT --> this will be cause hard-reset chip by WDT
** vTaskDelay(10/portMAX_DELAY) --> won't reset watchdog timer due to smallest scales --> no delay --> must be  > 100,
   replace portMAX_DELAY by portTICK_PEROID_MS will be OK due to smallst scale is 10 ms 

^^^^^^^^^

[[[gptimer -- user no need (can not) control individual timer, this work is done by driver, user just instance timer by gptimer_handle_t pointer]]]
- when use gptimer_config_t, if we don't set intr_share flags, it's default is intr_share, share interrupt can not work with edge trigger

************************************************************************

*********** gpio external interrupt on esp32 ***************************
- config pin wan to use as interrupt ( input, pullup, active at negative edge)
  --> config as non-shared interrupt (gpio_install_isr_service(0) (soc/esp32/include/soc/soc.h)
  --> enable interrupt (gpio_intr_enable(num pin)
  --> ping to interrupt handle(gpio_isr_handler_add(pin, function, argument of "function")

---
**note ////vTaskDelete(NULL); this line will be cause stop program at this line (due to this function is not called as a Task), not run conutinue (just task is run before this line can active again)


************************************************************************


************ dump kernel message when boot to serial port **************

    [[[with ubuntu  Xenial 16.04 (legacy) from github.com/orangepi-sunxi/orangepi-build
- run build.sh --> buils full OS --> enable early printk (CONFIG_EARLY_PRINTK) in Kernel Hacking, change Kernel command line type to Extend bootloader kernel arguments 
(CONFIG_CMDLINE_EXTEND) --> save --> countinue compiling

[[[ with kernel mainline (ubuntu 20), (CMDLINE from external/config/kernel/linux-sunxi-current.config) 
- enable EARLYPRINTK from linux-sunxi-current.config (or from menuconfig), 
- CONFIG_CMDLINE no need to change it
- in boot-sunxi.cmd(in external/config/bootscript folder), add init=/init to endof bootargs --> remove "hdmi.audio=EDID:0 disp.screen0_output_mode=${disp_mode}" in bootargs
  --> change loglevel to 7 (dump message to log of 1->7 level) by modifile verbosity in boot-sunxi.cmd and sunxi.txt in external/config/bootenv
  --> remove console=tty0 from "...console=ttyS0,115200 console=tty0"

************************************************************************


*************** setup to clone repo from bitbucket.org *****************
[[[tham khao  https://support.atlassian.com/bitbucket-cloud/docs/clone-a-repository/

- setup ssh key
    + run ssh-keygen ->enter --> enter the bitbucket's password --> enter (appear id_rsa id_rsa.pub in ~/.ssh/: ok)
    + start the agent: eval `ssh-agent` --> ssh-add ~/.ssh/<private_key_file>
    + add public key: copy content of id_rsa.pub to bitbucket web (avatar --> personal setting --> SSS keys --> add key --> save)
    + check: ssh -T git@bitbucket.org: You...Bitbucket. Shell...disable  --> success
    + (web) avatar --> Personal Settings --> app passwords --> Create new password
- Install git credential manager:
    + download: https://github.com/GitCredentialManager/git-credential-manager/releases/tag/v2.0.785 
    + install: sudo dpkg -i <path to package> --> git-credential-manager-core configure --> new terminal
    + clone repo command --> enter password of bitbucket or password when create ssh key-gen


[[[for github ]]] 
    https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent

************************************************************************

******************* switch between two gcc *****************************
-   sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.3 10 (10 is prior level)
 --> sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.3 10
 
 --> sudo update-alternatives --install /usr/bin/cc cc /usr/bin/gcc 30
 --> sudo update-alternatives --set cc /usr/bin/gcc

 --> sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++ 30
 --> sudo update-alternatives --set c++ /usr/bin/g++

 --> sudo update-alternatives --config gcc (change "cc" if "gcc" get error)
************************************************************************


********** cac buoc build c/c++ thanh file executable ******************
-             |.c file (precessor: #include, #if..., strip out comment
    compiler  |--> .s file (assembly file)
              |--> .o (object file)

    linker     .o --> executable file 

- Note: trong source code, khi compile, compiler chi can kiem tra khai bao ham (nguyen mau ham), dinh nghia cua ham duoc kiem tra (co hay ko) boi linker
 --> dieu nay can thiet khi su dung cmake de them thu vien (trong CMakeLists.txt)

- Note: 
[[tham khao]]
    https://askubuntu.com/questions/690631/executables-vs-shared-objects
    https://stackoverflow.com/questions/34519521/why-does-gcc-create-a-shared-object-instead-of-an-executable-binary-according-to/55704865#55704865
        
	--> executable va shared object deu la file co the chay duoc, executable khong can them bat cu gi nua de chay, shared object can co thu vien de link (run time lib)
	--> executable: co dia chi offset co dinh: 0x08048000 for i386, 0x00400000 for x86 and 0x00010000 for arm.
	--> shared object khong co offset co dinh (su dung: using address space layout randomization (ASLR))
	--> to compile executable from c/c++ file : add -no-pie to gcc when compile source code (mac dinh la -pie --> shared object thay vi executable)
    
    + trong cmake (CMakeLists.txt), su dung CMAKE_CXX/CC_FLAGS de cai dat thong so nay: set(CMAKE_CXX/CC_FLAGS "-no-pie")


************************************************************************

************ meaning [&] in c++ (feature c++11) ************************
[[tham khao]] https://en.wikipedia.org/wiki/Anonymous_function#C.2B.2B
              https://stackoverflow.com/questions/12262019/c-operator
              https://www.geeksforgeeks.org/lambda-expression-in-c/
              https://www.programiz.com/cpp-programming/lambda-expression
- lambda expression, to use lambda expression, must use auto keyword to deduce return-type, ex:
    auto greet = [](){
        // body lambda
    }

    equivalant normal function:
    void greet()
    {
        // body function
    }

    call lambda exp: greet() like normal function


 **Note:   lambda in STL algorithm:
    
    vector<int> nums = {1, 2, 3, 4, 5, 8, 10, 12};
    
    int even_count = count_if(nums.begin(), nums.end(), [](int num) {
    return num % 2 == 0;
    });

    return num as current value evaluating of vector nums
    
    **use lambda due to need to manipulation (thao tac) with above declared var with var passed when call lambda exp

************************************************************************


***************** module and drivers opipcplus *************************

- enable w1 module:
	+ change config in external/config/kernel/linux-sunxi-current.conf (W1_SLAVE_THERM....)
	+ add those lines to /etc/modules-load.d/modules.conf: (****)
   		w1-sunxi
    	w1-therm
    	w1-gpio

 (****) this step can be skip (take a look to external/config/boards/orangepipcplus.conf

	+ add those lines to /boot/orangepiEnv.txt
    	overlays=w1-gpio
    	para_w1_pin=PA20
    	para_w1_int_pullup=1    #enable internal pullup
	--> reboot (after that check /sys/bus/w1/devices)

	** 2 lines para may be added in external/config/fex/orangepipcplus.fex (source code) before

[[ref]] https://f1atb.fr/index.php/2020/11/02/temperature-ds18b20-and-orange-pi-zero/

    check pin for gpio : sudo cat /sys/kernel/debug/gpio
- measurement: result in this /sys/devices/w1_bus_master1/28-... , read file w1_slave 

- modify w1-gpio pin in buils OS phase: 
    modify kernel/orange-pi-5.4/arch/arm/boot/dts/overlay/sun8i-h3-w1-gpio.dts   (disconnect internet, so we need compile success before this turn)

    |||| usless ||||
    ** w1 is multiple device - 1 pin
    - enable multi w1-sensor:
        modify sun8i-h3-w1-gpio.dts file: double each content of __overlay__ --> modify it as expected
    ||||||||||||||||




- add module when compile OS:
	+ add source code to drivers/ folder (source code and Makefile, Kconfig(optional))
	+ add line : obj-m += nameOfModule to driver/Makefile


- note when write driver:
	+ do not directly access to data, must be use copy_from_user or copy_to_user (if not it will be cause segmentation fault)
	+ do not return 0 in dev_read, dev_write ( which function respectively with read, write from user space) --> this value cause dev_read, dev_write do infinite loop,
	return -1, it mean, we can not write to device file (/dev/deviceName): not permition (regardless of sudo)
	return -20, /dev/deviceName is not directory equivalant not write to this file 
	--> should be return > 0 value (length of string)


- prototype error
    + error: function declaration isn’t a prototype [-Werror=strict-prototypes] static void doSomething()
    --->fix: add void in () it mean doSomething(void)

- in interrupt handler of driver module (linux kernel) - interrupt context, can not use ioremap to access to physic address, because interrupt handler is not allow sleep
  to access to register as normal (kernel mode) use gpio_set_value(), to access register as kernel context (kernel mode) when interrupt handler is called, we must use 
  workqueue or kernel thread, these function is called in interrupt handler
  ex workqueue:
    void workQueueFunc(struct work_struct *work);
    DECLARE_WORK(workqueue, workQueueFunc);
    in interrupt handler:
        ...
        schedule_work(&workqueue);


[ref] https://stackoverflow.com/questions/71904268/how-to-access-physical-address-during-interrupt-handler-linux





************************************************************************

******************* software IO mapped memory **************************
[[ref]] https://stackoverflow.com/questions/1953562/include-asm-io-h-causes-error-asm-io-h-no-such-file-or-directory

- directly IO mapped memory: ... [wait...]
- software IO mapped memory:
	+ use ioremap(phy_addr, size); this func in [where to build]/include/asm-generic/io.h
		ex:
		#define PA_CFG1_REG *(volatile uint32_t*)(ioremap(BASE_ADDR + registerOffset, 4);
		--> PA_CFG1_REG: register of chip need to access
			BASE_ADDR: base address of group register
			registerOffset: offset address of accessed register
			4 : number of bytes want to access
		write to register: PA_CFG1_REG = value;
		read register: int reg = PA_CFG1_REG
		

		other way:
		void __iomem* PA_CFG1_REG = ioremap(BASE_ADDR + registerOffset, 4);
		write to register: iowrite32(value, registerAddress);
		read register: ioread32(registerAddress);
	
	+ use iounmap( void __iomem *addr) (no need, we can't also)
	
	** [where to build] ex:
		+ in x86_64: /lib/modules/$(shell uname -r)/build
	** in orangepi pc plus:  pullup just take affect in input mode


************************************************************************


******************** programming pthread in c **************************
- create new thread: pthread_create(...);
- wait for child thread done: pthread_join(thread id, a pointer);
- cancel a thread from other thread: pthread_cancel(thread id);
- return value and exit to process which created the thread: pthread_exit(value/pointer);  
  (just global var or dynamic memory pointer can be returned, local var will be destroy when return)

- get thread id (normal thread id  = process id + 1 (in case only one thread in current process):
	+ include sys/syscall.h, unistd.h library
	+ syscall(SYS_gettid)
- get thread id but can not print it (revert with above line), just used for comparing thread id:
	+ pthread_t thread_1 = pthread_self();
	+ pthread_t thread_A = pthread_self();
	--> compare: pthread_equal(thread_1, thread_A)  --> true if same thread
**Note: shouldn't use gettid()

************************************************************************


***************** variadic function <==> "..." *************************
- used to pass a uknown total of argument (until this func is called)
	+ data type in va_arg command will be check argument passed, if not data type not match
	argument will be ignore
	ex:
	variadic()
	{
	...
	va_arg(ap, double);
	...
	}
	in main func
	...
	variadic(4, 45, 56, 67, 8.9);

	--> argument in variadic:
		argument 0: 5.4, all of argument before 5.4 will be ignore

- used in preprocessor (#define):
	ex:
		#define pr_TD(ad,...) printf("%d\n", ad), printf(__VA_ARGS__)
		use:
			int adb = 60;
			int adc = 70;
			printf(adc, "test tring:%d\n", adb);

	--> explain: variadic function :
		pfirst printf will be catch first argument (ad), other argument will be catch by second
		printf function.
************************************************************************






























